name: Front Deployment

on:
  push:
    branches:
      - main

jobs:
  build_mall:
    name: Build and Deploy Mall
    runs-on: ubuntu-latest
    steps:
      - name: checkout Github Action
        uses: actions/checkout@v3

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('mall/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install npm dependencies
        working-directory: ./mall
        run: npm install

      - name: react build
        working-directory: ./mall
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY_ID }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        working-directory: ./mall
        env:
          BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME_ADMIN }}
        run: |
          aws s3 sync \
            ./build s3://$BUCKET_NAME

      - name: CloudFront Invalidation
        working-directory: ./admin
        env:
          CLOUD_FRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CLOUD_FRONT_ID --paths /*

  # build_admin:
  #   name: Build and Deploy Admin
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Similar steps as above with adjustments for the admin project

  # build_store:
  #   name: Build and Deploy Store
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Similar steps as above with adjustments for the store project
